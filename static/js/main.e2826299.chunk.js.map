{"version":3,"sources":["components/Button.jsx","components/Input.jsx","components/ClearButton.jsx","components/LogEntry.jsx","components/Notifications/Notification.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","LogEntry","logItems","goals","map","goal","text","Container","styled","div","visible","top","Notification","Fragment","visibility","App","useState","showNotif","setShowNotif","logs","setLogs","setInput","result","log","addToInput","value","math","id","Math","random","toString","length","shift","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2826299.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst isOperator = val => {\r\n    return !isNaN(val) || val === \".\" || val === \"=\";\r\n}\r\n\r\nexport const Button = props => (\r\n    <div className = {`button-wrapper ${\r\n        isOperator(props.children) ? null: \"operator\"\r\n    }`}\r\n    onClick = {() => props.handleClick(props.children)}\r\n    >\r\n        {props.children}\r\n    </div>\r\n)","import React from 'react';\r\nimport './Input.css';\r\n\r\n\r\nexport const Input = (props) => (\r\n    <div className = \"input\">\r\n        {props.input}\r\n    </div>\r\n);","import React from 'react';\r\nimport './ClearButton.css';\r\n\r\nexport const ClearButton = (props) => (\r\n    <div className = \"clear-button\" onClick={props.handleClear}>\r\n        {props.children}\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './LogEntry.css';\r\n\r\nconst LogEntry = props => {\r\n    const logItems = props.goals.map((goal) => <div className=\"log-list\">{goal.text}</div>); \r\n    return (\r\n        <div>\r\n            {logItems}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogEntry;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nvar visible;\r\nconst Container = styled.div`\r\n    visibility: ${props => props.visible};\r\n    background-color: #708090;\r\n    color: white;\r\n    padding: 16px;\r\n    position: absolute;\r\n    top: ${props => props.top}px;\r\n    right: 16px;\r\n    z-index: 999;\r\n    transition: top 0.5s ease;\r\n`;\r\n\r\nexport const Notification = props => {\r\n    const showNotification = () => {\r\n        this.setState({\r\n            top: 16,\r\n        }, () => {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    top: -100,\r\n                });\r\n            }, 3000);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Container top = {props.top} visible = {props.visibility}>A user has logged a calculation!</Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport {Button} from './components/Button';\nimport {Input} from './components/Input';\nimport {ClearButton} from './components/ClearButton';\nimport * as math from 'mathjs';\n//import { logDependencies } from 'mathjs';\nimport LogEntry from './components/LogEntry';\nimport {Notification} from './components/Notifications/Notification';\nimport styled from 'styled-components';\n\n//class App extends Component {\nfunction App() {\n  const [showNotif, setShowNotif] = useState(false);\n  const [logs, setLogs] = useState([]);\n  const [input, setInput] = useState(\"\");\n  var result = \"\";\n  var log = {};\n\n  const addToInput = value => {\n    setInput(input + value);\n  };\n\n  const handleEqual = () => {\n    result = math.evaluate(input);\n    log = {id: Math.random().toString, text: input + ' = ' + result};\n    if (logs.length === 10) {\n      logs.shift()\n    }\n    setLogs(logs => logs.concat(log))\n    setInput(result);\n    setShowNotif(true);\n  }\n\n  const hideNotif = () => {\n    setShowNotif(false)\n  }\n\n    return (\n      <div className=\"app\">\n        <div className=\"calc-wrapper\">\n          <Input input = {input}></Input>\n          <div className=\"row\">\n            <Button handleClick = {addToInput}>7</Button>\n            <Button handleClick = {addToInput}>8</Button>\n            <Button handleClick = {addToInput}>9</Button>\n            <Button handleClick = {addToInput}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick = {addToInput}>4</Button>\n            <Button handleClick = {addToInput}>5</Button>\n            <Button handleClick = {addToInput}>6</Button>\n            <Button handleClick = {addToInput}>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick = {addToInput}>1</Button>\n            <Button handleClick = {addToInput}>2</Button>\n            <Button handleClick = {addToInput}>3</Button>\n            <Button handleClick = {addToInput}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick = {addToInput}>.</Button>\n            <Button handleClick = {addToInput}>0</Button>\n            <Button handleClick = {() => handleEqual()}>=</Button>\n            <Button handleClick = {addToInput}>-</Button>\n          </div>\n          <div className = \"row\">\n            <ClearButton handleClear={() => setInput(\"\")}>Clear</ClearButton>\n          </div>\n        </div>\n        <div className =\"main-logs\">\n          <LogEntry goals = {logs}/>\n        </div>\n        <div className = \"notifs\">\n          <Notification top = {16} visibility = {showNotif ?  \"visible\":\"hidden\"}/>\n          <button className =\"ok-button\" onClick={hideNotif}>OK</button>\n        </div>\n      </div>\n    );\n  }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}